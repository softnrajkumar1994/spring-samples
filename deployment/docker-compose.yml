version: '3.7'

services:
    rk_mysql:
        image: mysql:latest
        restart: unless-stopped
        networks:
            - backend
        environment:
            MYSQL_ROOT_PASSWORD: root
        ports:
            - 3306:3306
        volumes:
            - mysql_data:/var/lib/mysql
        command:
            - --character-set-server=utf8
            - --collation-server=utf8_general_ci
            - --innodb-buffer-pool-size=1G
            - --innodb-flush-log-at-trx-commit=0
            - --max-allowed-packet=100M
            - --innodb-fast-shutdown=0
            - --innodb-max-dirty-pages-pct=0

    elasticsearch-node1:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
        container_name: es-node1
        environment:
            - node.name=es-node1
            - cluster.name=rk_test
            - cluster.initial_master_nodes=es-node1,es-node2,es-node3
            - discovery.seed_hosts=es-node2,es-node3
            - xpack.security.enabled=false
            - bootstrap.memory_lock=true
            - ES_JAVA_OPTS=-Xms1g -Xmx1g
        ulimits:
            memlock:
                soft: -1
                hard: -1
        networks:
            - backend
        ports:
            - 9200:9200
        volumes:
            - esdata1:/usr/share/elasticsearch/data

    elasticsearch-node2:
            image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
            container_name: es-node2
            environment:
                - node.name=es-node2
                - cluster.name=rk_test
                - cluster.initial_master_nodes=es-node1,es-node2,es-node3
                - discovery.seed_hosts=es-node1,es-node3
                - xpack.security.enabled=false
                - bootstrap.memory_lock=true
                - ES_JAVA_OPTS=-Xms1g -Xmx1g
            ulimits:
                memlock:
                    soft: -1
                    hard: -1
            networks:
                - backend
            volumes:
                - esdata2:/usr/share/elasticsearch/data

    elasticsearch-node3:
            image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
            container_name: es-node3
            environment:
                - node.name=es-node3
                - cluster.name=rk_test
                - cluster.initial_master_nodes=es-node1,es-node2,es-node3
                - discovery.seed_hosts=es-node1,es-node2
                - xpack.security.enabled=false
                - bootstrap.memory_lock=true
                - ES_JAVA_OPTS=-Xms1g -Xmx1g
            ulimits:
                memlock:
                    soft: -1
                    hard: -1
            networks:
                - backend
            volumes:
                - esdata3:/usr/share/elasticsearch/data

    rk_kibana:
        image: docker.elastic.co/kibana/kibana:8.6.0
        container_name: rk_kibana
        restart: unless-stopped
        networks:
            - backend
            - traefik-publicrkbackend
        depends_on:
            - elasticsearch-node1
        environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch-node1:9200
            - SERVER_NAME=rk_kibana
            - SERVER_HOST=0.0.0.0
            - SERVER_PORT=5601
        ports:
            - 5601:5601
        command: /usr/local/bin/kibana-docker

    postgres:
        image: postgres:14.1-alpine
        restart: unless-stopped
        environment:
            POSTGRES_DB: rk_test
            POSTGRES_USER: rk_test
            POSTGRES_PASSWORD: rk_test
        ports:
            - 5432:5432
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - backend

    mongo:
        image: mongo:latest
        restart: unless-stopped
        networks:
            - backend
        ports:
            - 27017:27017
        volumes:
            - mongo_data:/data/db

#    redis:
#        image: redis:latest
#        restart: unless-stopped
#        networks:
#            - backend
#        ports:
#            - 6379:6379

    rkkafka:
        image: bitnami/kafka:latest
        restart: unless-stopped
        networks:
            - backend
        ports:
            - 9092:9092
            - 2181:2181
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_CFG_ZOOKEEPER_CONNECT: rkkafka:2181
            ALLOW_PLAINTEXT_LISTENER: yes
            KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
            KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
            KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
        volumes:
            - kafka_data:/bitnami/kafka

networks:
    backend:
    traefik-publicrkbackend:
        external: true

volumes:
    mysql_data:
    postgres_data:
    mongo_data:
    kafka_data:
    esdata1:
    esdata2:
    esdata3:
